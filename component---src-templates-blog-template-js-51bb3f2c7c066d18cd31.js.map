{"version":3,"sources":["webpack:///./src/templates/blogTemplate.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["Template","_ref","data","props","_babel_runtime_helpers_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0___default","markdownRemark","frontmatter","html","path","title","disqusConfig","shortname","process","GATSBY_DISQUS_NAME","config","identifier","console","log","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","className","date","dangerouslySetInnerHTML","__html","disqus_react__WEBPACK_IMPORTED_MODULE_4__","pageQuery","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","StaticQueryDataRenderer","staticQueryData","query","render","finalData","Fragment","children","Consumer","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json","shape","pathname","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","arrayOf","Header","siteTitle","react_default","style","background","marginBottom","margin","maxWidth","padding","gatsby_browser_entry","to","color","textDecoration","Layout","header","paddingTop","Date","getFullYear","href","_755544856","node"],"mappings":"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","file":"component---src-templates-blog-template-js-51bb3f2c7c066d18cd31.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { DiscussionEmbed } from \"disqus-react\"\n\nexport default function Template({\n  data, // this prop will be injected by the GraphQL query below.\n  ...props\n}) {\n  const { markdownRemark } = data // data.markdownRemark holds our post data\n  const { frontmatter, html } = markdownRemark\n  const { path, title } = frontmatter\n  const disqusConfig = {\n    shortname: process.env.GATSBY_DISQUS_NAME,\n    config: { identifier: path, title },\n  }\n  console.log(data, props)\n  return (\n    <Layout>\n      <SEO title={frontmatter.title} />\n      <div className=\"blog-post-container\">\n        <div className=\"blog-post\">\n          <h1>{frontmatter.title}</h1>\n          <h2>{frontmatter.date}</h2>\n          <div\n            className=\"blog-post-content\"\n            dangerouslySetInnerHTML={{ __html: html }}\n          />\n        </div>\n      </div>\n      <DiscussionEmbed {...disqusConfig} />\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query($path: String!) {\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      html\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        path\n        title\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      background: `#0b6b50`,\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            margin: `0 auto`,\n            maxWidth: 960,\n            padding: `0px 1.0875rem 1.45rem`,\n            paddingTop: 0,\n          }}\n        >\n          <main>{children}</main>\n          <footer>\n            © {new Date().getFullYear()} Daniel Haukenes Miller, Built with\n            {` `}\n            <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n          </footer>\n        </div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}